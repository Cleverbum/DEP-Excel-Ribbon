<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>